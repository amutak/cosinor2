ssections<-function(data,timecol,firstsubj,lastsubj,period,na.action,interval,increment){
  i<-1
  j<-1
  q<-0
  cosinors<-list()
  coefficients<-data.frame(matrix(nrow=3,ncol=1))
  lmcoeffs<-data.frame(matrix(nrow=2,ncol=1))
  pvalues<-list()
  cor.acrs<-list()
  acro4<-list()
  acro5<-list()
  acro6<-list()
  interm.coefs<-list()
  sections<-list()
  fitted.values<-list()
  emp.mean<-list()
  plots<-list()
  while (j <= nrow(data)){
    j=i+interval-1
    if(length(i:j) == interval & j <= nrow(data)){
      q=q+1
    }
    i=i+increment
  }
  lmfitted<-data.frame(matrix(nrow=q,ncol=1))
  if (increment>interval){
    stop("Value of increment cannot be higher than the value of interval.")
  }
  if (lastsubj - firstsubj == 0){
    colnames(data)[timecol]<-"Time"
    colnames(data)[firstsubj]<-"Subjy"
    for (k in c(1:q)){
      cosinors[[k]]<-cosinor.lm(Subjy~time(Time),period=period,na.action=na.action,data=data[c(k:(k+interval-1)),])
      pvalues[[k]]<-cosinor.detect(cosinors[[k]])[[4]]
      coefficients[[k]]<-cosinors[[k]]$coefficients
      cor.acrs[[k]]<-correct.acrophase(cosinors[[k]])
      k=k+increment
    }
    coefficients<-data.frame(t(coefficients))
  }
  else {
    for (k in c(1:q)){
      cosinors[[k]]<-population.cosinor.lm(firstsubj = firstsubj, lastsubj = lastsubj,timecol = timecol,period=period,na.action=na.action,data=data[c(k:(k+interval-1)),])
      pvalues[[k]]<-cosinor.detect(cosinors[[k]])[[4]]
      coefficients[[k]]<-t(cosinors[[k]]$coefficients)
      cor.acrs[[k]]<-cosinors[[k]]$coefficients$Acrophase
      k=k+increment
    }
  }
  acro2<-as.numeric(cor.acrs)-2*pi
  acro3<-as.numeric(cor.acrs)+2*pi
  cor.acrs<-as.numeric(cor.acrs)
  if (lastsubj-firstsubj != 0){
    coefficients<-t(coefficients)
  }
  coefficients<-cbind(coefficients,acro2,cor.acrs,acro3)
  coefficients<-data.frame(coefficients)
  colnames(coefficients)<-c("MESOR","Amplitude","Acrophase","acro2","cor.acrs","acro3")
  for (l in c(1:nrow(coefficients))){
    if (coefficients[l,4] >= -2*pi & coefficients[l,4] <= 0)
    {
      coefficients[l,3]<-coefficients[l,4]
    }
    else if (coefficients[l,5] >= -2*pi & coefficients[l,5] <= 0)
    {
      coefficients[l,3]<-coefficients[l,5]
    }
    else if (coefficients[l,6] >= -2*pi & coefficients[l,6] <= 0)
    {
      coefficients[l,3]<-coefficients[l,6]
    }
  }
  cor.acrs<-data.frame(t(cor.acrs))
  acro4[[1]]<-cor.acrs[[1]]
  for (m in c(2:nrow(coefficients))){
    if(abs(as.numeric(cor.acrs[[m]])-as.numeric(acro4[[(m-1)]]) < 1*pi)){
      acro4[[m]]<-cor.acrs[[m]]
    }
    else if(abs(as.numeric(acro2[[m]])-as.numeric(acro4[[(m-1)]]) < 1*pi)){
      acro4[[m]]<-acro2[[m]]
    }
    else {
      acro4[[m]]<-acro3[[m]]
    }
  }
  acro4<-data.frame(acro4)
  acro4<-t(acro4)
  acro5<-acro4+(2*pi)
  acro6<-acro4-(2*pi)
  coefficients<-cbind(coefficients,acro4,acro5,acro6)
  colnames(coefficients)<-c("MESOR","Amplitude","Acrophase","acro2","cor.acrs","acro3","acro4","acro5","acro6")
  for (n in c(1:nrow(coefficients))){
    if (coefficients[n,7] >= -2*pi & coefficients[n,7] <= 0)
    {
      coefficients[n,3]<-coefficients[n,7]
    }
    else if (coefficients[n,8] >= -2*pi & coefficients[n,8] <= 0)
    {
      coefficients[n,3]<-coefficients[n,8]
    }
    else if (coefficients[n,9] >= -2*pi & coefficients[n,9] <= 0)
    {
      coefficients[n,3]<-coefficients[n,9]
    }
  }
  acrophases<-data.frame(coefficients[,c(7,8,9)])
  coefficients<-data.frame(coefficients[,c(-4,-5,-6,-7,-8,-9)])
  row.names(coefficients)<-c(1:nrow(coefficients))
  lmcoeffs[[1]]<-lm(coefficients$MESOR~c(1:nrow(coefficients)))$coefficients
  lmcoeffs[[2]]<-lm(coefficients$Amplitude~c(1:nrow(coefficients)))$coefficients
  lmcoeffs[[3]]<-lm(acrophases[,1]~c(1:nrow(coefficients)))$coefficients
  lmcoeffs[[4]]<-lm(acrophases[,2]~c(1:nrow(coefficients)))$coefficients
  lmcoeffs[[5]]<-lm(acrophases[,3]~c(1:nrow(coefficients)))$coefficients
  lmfitted[[1]]<-lm(coefficients$MESOR~c(1:nrow(coefficients)))$fitted.values
  lmfitted[[2]]<-lm(coefficients$Amplitude~c(1:nrow(coefficients)))$fitted.values
  lmfitted[[3]]<-lm(acrophases[,1]~c(1:nrow(coefficients)))$fitted.values
  lmfitted[[4]]<-lm(acrophases[,2]~c(1:nrow(coefficients)))$fitted.values
  lmfitted[[5]]<-lm(acrophases[,3]~c(1:nrow(coefficients)))$fitted.values
  for (o in c(1:nrow(lmfitted))){
    if (lmfitted[o,3] >= -2*pi & lmfitted[o,3] <= 0)
    {
      lmfitted[l,3]<-lmfitted[l,3]
    }
    else if (lmfitted[o,4] >= -2*pi & lmfitted[o,4] <= 0)
    {
      lmfitted[o,3]<-lmfitted[o,4]
    }
    else if (lmfitted[o,5] >= -2*pi & lmfitted[o,5] <= 0)
    {
      lmfitted[o,3]<-lmfitted[o,5]
    }
  }
  acrolms<-data.frame(lmfitted[,c(3,4,5)])
  lmfitted<-data.frame(lmfitted[,c(-4,-5)])
  colnames(lmfitted)<-c("MESOR","Amplitude","Acrophase")
  if (lmcoeffs[[3]][[1]] >= 2*pi & lmcoeffs[[3]][[1]] <=0){
    lmcoeffs[[3]]<-lmcoeffs[[3]]
  }
  else if (lmcoeffs[[4]][[1]] >= 2*pi & lmcoeffs[[4]][[1]] <=0){
    lmcoeffs[[3]]<-lmcoeffs[[4]]
  }
  else if (lmcoeffs[[5]][[1]] >= 2*pi & lmcoeffs[[5]][[1]] <=0){
    lmcoeffs[[3]]<-lmcoeffs[[5]]
  }
  lmcoeffs<-data.frame(lmcoeffs[,c(-4,-5)])
  sections[[1]]<-coefficients
  sections[[2]]<-lmcoeffs
  sections[[3]]<-lmfitted
  names(sections)<-c("coefficients","lm.coeffs","lm.fitted")
  colnames(sections$lm.coeffs)<-c("MESOR","Amplitude","Acrophase")
  row.names(sections$lm.coeffs)<-c("b","a")
  for (p in 1:nrow(data)){
    fitted.values<-c(fitted.values,((sections$lm.coeffs$MESOR[[2]]*p)+sections$lm.coeffs$MESOR[[1]])+(((sections$lm.coeffs$Amplitude[[2]]*p)+sections$lm.coeffs$Amplitude[[1]])*cos(((2*pi*data[p,timecol])/period)+((sections$lm.coeffs$Acrophase[[2]]*p)+sections$lm.coeffs$Acrophase[[1]]))))
  }
  sections[[4]]<-data.frame(t(data.frame(fitted.values)))
  names(sections)<-c("coefficients","lm.coeffs","lm.fitted","fitted.values")
  data2<-data.frame(data[,-timecol])
  emp.mean<-rowMeans(data2, na.rm = T)
  sections[[5]]<-data.frame(emp.mean)
  sections[[6]]<-data.frame(pvalues)
  sections[[7]]<-cosinors
  names(sections)<-c("coefficients","lm.coeffs","lm.fitted","fitted.values","emp.mean","p-values", "cosinors")
  PR<-cor(sections[[4]],sections[[5]])^2
  plots[[1]]<-ggplot(data.frame(emp.mean),aes(x=c(1:nrow(data.frame(emp.mean)))))+
    geom_line(aes(y=t(data.frame(fitted.values)), linetype = "Estimated"), size = 1) +
    geom_line(aes(y=data.frame(emp.mean), linetype = "Observed"), size = 1.3)+
    labs(x = "Time", y = "Value", title = "Chronogram", caption = paste("PR = ",PR))+
    scale_linetype_manual("",values=c("Estimated"=2,"Observed"=1))
  plots[[2]]<-ggplot(coefficients,aes(x=c(1:nrow(coefficients))))+
    geom_line(aes(y=lmfitted[,1], linetype = "Estimated"), size = 1) +
    geom_line(aes(y=coefficients[,1], linetype = "Observed"), size = 1.3)+
    labs(x = "Section", y = "Value", title = "MESOR")+
    scale_linetype_manual("",values=c("Estimated"=2,"Observed"=1))
  plots[[3]]<-ggplot(coefficients,aes(x=c(1:nrow(coefficients))))+
    geom_line(aes(y=lmfitted[,2], linetype = "Estimated"), size = 1) +
    geom_line(aes(y=coefficients[,2], linetype = "Observed"), size = 1.3)+
    labs(x = "Section", y = "Value", title = "Amplitude")+
    scale_linetype_manual("",values=c("Estimated"=2,"Observed"=1))
  plots[[4]]<-ggplot(acrophases,aes(x=c(1:nrow(acrophases))))+
    geom_line(aes(y=acrolms[,1], linetype = "Estimated"), size = 1) +
    geom_line(aes(y=acrolms[,2], linetype = "Estimated"), size = 1) +
    geom_line(aes(y=acrolms[,3], linetype = "Estimated"), size = 1) +
    geom_line(aes(y=acrophases[,1], linetype = "Observed"), size = 1.3)+
    geom_line(aes(y=acrophases[,2], linetype = "Observed"), size = 1.3)+
    geom_line(aes(y=acrophases[,3], linetype = "Observed"), size = 1.3)+
    labs(x = "Section", y = "Value", title = "Acrophase")+
    scale_linetype_manual("",values=c("Estimated"=2,"Observed"=1))+
    ylim(-2*pi,0)
  pvalues<-data.frame(t(data.frame(pvalues)))
  plots[[5]]<-ggplot(pvalues,aes(x=c(1:q)))+
    geom_line(aes(y=pvalues, linetype = "Observed"), size = 1.3)+
    geom_point(aes(y=pvalues), size = 1.3)+
    geom_line(aes(y=0.05, linetype = "Cutoff"), size = 0.7)+
    labs(x = "Section", y = "Value", title = "p-values")+
    scale_linetype_manual("",values=c("Cutoff"=2,"Observed"=1)) +
    theme(legend.position="none")
  sections[[8]]<-plots
  names(sections)<-c("coefficients","lm.coeffs","lm.fitted","fitted.values","emp.mean","p-values", "cosinors", "plots")
  par(ask=T)
  return(sections)
}
